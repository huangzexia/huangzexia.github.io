<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[利用GitHub + Hexo 快速搭建属于自己的博客]]></title>
    <url>%2F2018%2F05%2F24%2F20180524%2F</url>
    <content type="text"><![CDATA[一步步慢慢的爬吧1、安装Node 、Git1$ 作为一个前端开发者就不说了 2、安装Hexo脚手架,在本地生成页面123456789$ 全局安装(这里我选择npm,你也可以试一下yarn)：npm i -g hexo-cli$ 局部安装：cd desktopmkdir Hexocd Hexohexo i my-blog // i是初始化init的缩写 my-blog则是我们自己给博客起的名字cd my-bloghexo -ghexo s 3、打开浏览器输入：http://localhost:4000/（不出问题的话就会出现下图所见的页面了） 现在你已经可以在这个主题下写博客了。当然，作为一个前端开发工程师我想你肯定是不喜欢这样的。肯定是要换皮肤的，这里我就以：next 这个皮肤主题简单说说吧，这个也是很多用hexo搭建起来的个人网站非常喜欢的，我自己也喜欢，如下图所示：简单、清爽 4、next主题安装选择next主题选择有三种选择，上图所示的是最简洁的一种，三种样式主题分别是： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 123$ 主题安装：命令行进入根目录cd my-blog输入：git clone https://github.com/iissnan/hexo-theme-next themes/next 安装完成后,用编辑器打开项目，找到根目录下面的配置文件：_config.yml，这个时候我们会发现根目录下的themes文件夹多了一个next文件，这就是刚刚下载的主题：然后我们修改如图所示的地方，将主题替换：然后我们再在命令行运行下面的命令： 12345 $ hexo clean //清除缓存 $ hexo g //重新生成代码 $ hexo s //部署到本地//然后打开浏览器访问 localhost:4000 查看效果 到这里，本地对的开发配置就差不多了，接下来就轮到怎么样在GitHub上面显示了 5、在GitHub上面创建一个仓库（前提是你已经有github账号了）登录到GitHub,按照如图所示，创建一个仓库（注意后面的命名，最好选择和前面的一样，不然到时候域名地址会很长），按照这个操作 ，不出问题的话应该就可以看到一个网站了 PS: 上面的报红是因为我已经创建了一个相同名字的仓库了，你只要给自己起一个名字就可以了 PS: 最好还是选择一个，不然就是一个空白页面 6、本地代码上传到创建的远程仓库在项目根目录找到配置文件，在如图所示的地方修改： 这个时候要装一个Hexo提供的一个插件：hexo-deployer-git，这个插件是为了快速方便的一键部署到gitHub上 1$ npm i hexo-deployer-git -s 安装完后运行下面的命令：不报错的话一会儿就会发布到远端了（但是可能不一定立马生效，稍微等几分钟） 123$ hexo clear //清除$ hexo g //生成静态页面$ hexo d //发布 几分钟后打开你的网站，应该就可以看到你本地的效果了（下图是我自己的）：是不是觉得很简单，当然这个应该是最基础的了]]></content>
  </entry>
</search>
